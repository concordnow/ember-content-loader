name: 'CI/CD'
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  schedule:
    - cron: '0 3 * * *' # daily, at 3am

env:
  NODE_VERSION: '16'

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: 'Tests'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run lint
      - run: npm run test:percy
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

  floating-dependencies:
    name: 'Floating Dependencies'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - run: npm run test:ember

  try-scenarios:
    name: "Try: ${{ matrix.ember-try-scenario }}"

    runs-on: ubuntu-latest

    needs: test

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-lts-3.20
          - ember-lts-3.24
          - ember-release
          # - ember-beta
          # - ember-canary
          - ember-classic
          - ember-default-with-jquery
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }} --skip-cleanup

  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    needs: [try-scenarios]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm ci
      - run: npm run build
        env:
          ROOT_URL: ${{ github.event.repository.name }}
      - name: 'Deploy documentation'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  release:
    name: 'Release'
    runs-on: ubuntu-latest
    needs: [try-scenarios]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
      - name: 'Publish npm package'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: 'Create github release'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
